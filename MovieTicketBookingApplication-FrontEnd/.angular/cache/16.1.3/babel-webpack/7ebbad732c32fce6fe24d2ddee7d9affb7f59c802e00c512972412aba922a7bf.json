{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TktService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://localhost:8000';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  addTicket(tkt, bookingId) {\n    return this.httpClient.post(this.url + '/tickets/add?bookingId=' + bookingId, JSON.stringify(tkt), this.httpOptions).pipe(catchError(this.handleError));\n  }\n  handleError(eResponse) {\n    if (eResponse.error instanceof ErrorEvent) {\n      console.log('Client Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    } else {\n      console.log('Server Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    }\n    return throwError(eResponse.error.message);\n  }\n}\nTktService.ɵfac = function TktService_Factory(t) {\n  return new (t || TktService)(i0.ɵɵinject(i1.HttpClient));\n};\nTktService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TktService,\n  factory: TktService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","throwError","catchError","TktService","constructor","httpClient","url","httpOptions","headers","addTicket","tkt","bookingId","post","JSON","stringify","pipe","handleError","eResponse","error","ErrorEvent","console","log","message","status","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/coder/project/workspace/MovieTicketBookingApplication-FrontEnd/src/app/ticket/tkt.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Observable, pipe, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Ticket } from './ticket';\n@Injectable({\n  providedIn: 'root',\n})\nexport class TktService {\n  private url = 'http://localhost:8000';\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  };\n\n  constructor(private httpClient: HttpClient) {}\n\n  addTicket(tkt: any, bookingId: number): Observable<any> {\n    return this.httpClient\n      .post<Ticket>(\n        this.url + '/tickets/add?bookingId=' + bookingId,\n        JSON.stringify(tkt),\n        this.httpOptions\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  handleError(eResponse: HttpErrorResponse) {\n    if (eResponse.error instanceof ErrorEvent) {\n      console.log('Client Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    } else {\n      console.log('Server Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    }\n    return throwError(eResponse.error.message);\n  }\n}\n"],"mappings":"AACA,SAGEA,WAAW,QACN,sBAAsB;AAC7B,SAA2BC,UAAU,QAAQ,MAAM;AACnD,SAASC,UAAU,QAAQ,gBAAgB;;;AAK3C,OAAM,MAAOC,UAAU;EAQrBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAPtB,KAAAC,GAAG,GAAG,uBAAuB;IACrC,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIR,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;EAE4C;EAE7CS,SAASA,CAACC,GAAQ,EAAEC,SAAiB;IACnC,OAAO,IAAI,CAACN,UAAU,CACnBO,IAAI,CACH,IAAI,CAACN,GAAG,GAAG,yBAAyB,GAAGK,SAAS,EAChDE,IAAI,CAACC,SAAS,CAACJ,GAAG,CAAC,EACnB,IAAI,CAACH,WAAW,CACjB,CACAQ,IAAI,CAACb,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAAC;EACvC;EAEAA,WAAWA,CAACC,SAA4B;IACtC,IAAIA,SAAS,CAACC,KAAK,YAAYC,UAAU,EAAE;MACzCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGJ,SAAS,CAACC,KAAK,CAACI,OAAO,CAAC;MAC5DF,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGJ,SAAS,CAACM,MAAM,CAAC;KAC/C,MAAM;MACLH,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGJ,SAAS,CAACC,KAAK,CAACI,OAAO,CAAC;MAC5DF,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGJ,SAAS,CAACM,MAAM,CAAC;;IAEhD,OAAOtB,UAAU,CAACgB,SAAS,CAACC,KAAK,CAACI,OAAO,CAAC;EAC5C;;AA7BWnB,UAAU,C;mBAAVA,UAAU,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVxB,UAAU,C;SAAVA,UAAU;EAAAyB,OAAA,EAAVzB,UAAU,CAAA0B,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}