{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { pipe, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BokingService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://localhost:8080';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getAllBookings() {\n    return this.httpClient.get(this.url + '/booking' + '/findall');\n    pipe(catchError(this.handleError));\n  }\n  addBooking(book, showId) {\n    return this.httpClient.post(this.url + '/booking/insert?showId=' + showId, JSON.stringify(book), this.httpOptions).pipe(catchError(this.handleError));\n  }\n  updateMovie(book) {\n    return this.httpClient.put(this.url + '/booking/update', JSON.stringify(book), this.httpOptions).pipe(catchError(this.handleError));\n  }\n  getBookingById(id) {\n    return this.httpClient.get(this.url + '/booking/viewbooking/' + id).pipe(catchError(this.handleError));\n  }\n  deleteBooking(bookingId) {\n    return this.httpClient.delete(this.url + '/booking/ticketbooking/' + bookingId).pipe(catchError(this.handleError));\n  }\n  getTotalCost(id) {\n    return this.httpClient.get(this.url + '/booking/cost/' + id).pipe(catchError(this.handleError));\n  }\n  handleError(eResponse) {\n    if (eResponse.error instanceof ErrorEvent) {\n      console.log('Client Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    } else {\n      console.log('Server Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    }\n    return throwError(eResponse.error.message);\n  }\n}\nBokingService.ɵfac = function BokingService_Factory(t) {\n  return new (t || BokingService)(i0.ɵɵinject(i1.HttpClient));\n};\nBokingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BokingService,\n  factory: BokingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","pipe","throwError","catchError","BokingService","constructor","httpClient","url","httpOptions","headers","getAllBookings","get","handleError","addBooking","book","showId","post","JSON","stringify","updateMovie","put","getBookingById","id","deleteBooking","bookingId","delete","getTotalCost","eResponse","error","ErrorEvent","console","log","message","status","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/coder/project/workspace/MovieTicketBookingApplication-FrontEnd/src/app/booking/boking.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Observable, pipe, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Booking } from './booking';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BokingService {\n  private url = 'http://localhost:8080';\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  };\n  constructor(private httpClient: HttpClient) {}\n\n  getAllBookings(): Observable<Booking[]> {\n    return this.httpClient.get<Booking[]>(this.url + '/booking' + '/findall');\n    pipe(catchError(this.handleError));\n  }\n\n  addBooking(book: any, showId: number): Observable<any> {\n    return this.httpClient\n      .post<Booking>(\n        this.url + '/booking/insert?showId=' + showId,\n        JSON.stringify(book),\n        this.httpOptions\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  updateMovie(book: any): Observable<any> {\n    return this.httpClient\n      .put<Booking>(\n        this.url + '/booking/update',\n        JSON.stringify(book),\n        this.httpOptions\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  getBookingById(id: any): Observable<Booking> {\n    return this.httpClient\n      .get<Booking>(this.url + '/booking/viewbooking/' + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  deleteBooking(bookingId: number): Observable<Booking> {\n    return this.httpClient\n      .delete<Booking>(this.url + '/booking/ticketbooking/' + bookingId)\n      .pipe(catchError(this.handleError));\n  }\n\n  getTotalCost(id: any): Observable<Booking> {\n    return this.httpClient\n      .get<Booking>(this.url + '/booking/cost/' + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  handleError(eResponse: HttpErrorResponse) {\n    if (eResponse.error instanceof ErrorEvent) {\n      console.log('Client Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    } else {\n      console.log('Server Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    }\n    return throwError(eResponse.error.message);\n  }\n}\n"],"mappings":"AACA,SAGEA,WAAW,QACN,sBAAsB;AAC7B,SAAqBC,IAAI,EAAEC,UAAU,QAAQ,MAAM;AACnD,SAASC,UAAU,QAAQ,gBAAgB;;;AAM3C,OAAM,MAAOC,aAAa;EAOxBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IANtB,KAAAC,GAAG,GAAG,uBAAuB;IACrC,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIT,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;EAC4C;EAE7CU,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAY,IAAI,CAACJ,GAAG,GAAG,UAAU,GAAG,UAAU,CAAC;IACzEN,IAAI,CAACE,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAAC;EACpC;EAEAC,UAAUA,CAACC,IAAS,EAAEC,MAAc;IAClC,OAAO,IAAI,CAACT,UAAU,CACnBU,IAAI,CACH,IAAI,CAACT,GAAG,GAAG,yBAAyB,GAAGQ,MAAM,EAC7CE,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,EACpB,IAAI,CAACN,WAAW,CACjB,CACAP,IAAI,CAACE,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAAC;EACvC;EAEAO,WAAWA,CAACL,IAAS;IACnB,OAAO,IAAI,CAACR,UAAU,CACnBc,GAAG,CACF,IAAI,CAACb,GAAG,GAAG,iBAAiB,EAC5BU,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,EACpB,IAAI,CAACN,WAAW,CACjB,CACAP,IAAI,CAACE,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAAC;EACvC;EAEAS,cAAcA,CAACC,EAAO;IACpB,OAAO,IAAI,CAAChB,UAAU,CACnBK,GAAG,CAAU,IAAI,CAACJ,GAAG,GAAG,uBAAuB,GAAGe,EAAE,CAAC,CACrDrB,IAAI,CAACE,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAAC;EACvC;EAEAW,aAAaA,CAACC,SAAiB;IAC7B,OAAO,IAAI,CAAClB,UAAU,CACnBmB,MAAM,CAAU,IAAI,CAAClB,GAAG,GAAG,yBAAyB,GAAGiB,SAAS,CAAC,CACjEvB,IAAI,CAACE,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAAC;EACvC;EAEAc,YAAYA,CAACJ,EAAO;IAClB,OAAO,IAAI,CAAChB,UAAU,CACnBK,GAAG,CAAU,IAAI,CAACJ,GAAG,GAAG,gBAAgB,GAAGe,EAAE,CAAC,CAC9CrB,IAAI,CAACE,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAAC;EACvC;EAEAA,WAAWA,CAACe,SAA4B;IACtC,IAAIA,SAAS,CAACC,KAAK,YAAYC,UAAU,EAAE;MACzCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGJ,SAAS,CAACC,KAAK,CAACI,OAAO,CAAC;MAC5DF,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGJ,SAAS,CAACM,MAAM,CAAC;KAC/C,MAAM;MACLH,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGJ,SAAS,CAACC,KAAK,CAACI,OAAO,CAAC;MAC5DF,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGJ,SAAS,CAACM,MAAM,CAAC;;IAEhD,OAAO/B,UAAU,CAACyB,SAAS,CAACC,KAAK,CAACI,OAAO,CAAC;EAC5C;;AA7DW5B,aAAa,C;mBAAbA,aAAa,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAbjC,aAAa,C;SAAbA,aAAa;EAAAkC,OAAA,EAAblC,aAAa,CAAAmC,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}