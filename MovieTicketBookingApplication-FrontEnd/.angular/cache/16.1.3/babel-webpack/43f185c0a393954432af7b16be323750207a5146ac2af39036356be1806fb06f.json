{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./login/loggin.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(lService, router) {\n    this.lService = lService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (!this.lService.getLoginStatus()) {\n      return this.router.parseUrl('signIn');\n    }\n    return this.lService.getLoginStatus();\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.LogginService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthGuard","constructor","lService","router","canActivate","route","state","getLoginStatus","parseUrl","i0","ɵɵinject","i1","LogginService","i2","Router","factory","ɵfac","providedIn"],"sources":["/home/coder/project/workspace/MovieTicketBookingApplication-FrontEnd/src/app/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LogginService } from './login/loggin.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private lService: LogginService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (!this.lService.getLoginStatus()) {\n      return this.router.parseUrl('signIn');\n    }\n    return this.lService.getLoginStatus();\n  }\n}\n"],"mappings":";;;AAcA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,QAAuB,EAAUC,MAAc;IAA/C,KAAAD,QAAQ,GAARA,QAAQ;IAAyB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEtEC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAM1B,IAAI,CAAC,IAAI,CAACJ,QAAQ,CAACK,cAAc,EAAE,EAAE;MACnC,OAAO,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,QAAQ,CAAC;;IAEvC,OAAO,IAAI,CAACN,QAAQ,CAACK,cAAc,EAAE;EACvC;;AAfWP,SAAS,C;mBAATA,SAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAATd,SAAS,C;SAATA,SAAS;EAAAe,OAAA,EAATf,SAAS,CAAAgB,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}