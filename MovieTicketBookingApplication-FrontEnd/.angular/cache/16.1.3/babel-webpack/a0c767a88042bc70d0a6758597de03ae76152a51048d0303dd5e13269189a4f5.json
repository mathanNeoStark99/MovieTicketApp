{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MveeService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'https://8080-fcbeaafebaafceeddbcdaddcefcddcaaceb.project.examly.io';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getAllMovies() {\n    return this.httpClient.get(this.url + '/movies' + '/findall').pipe(catchError(this.handleError));\n  }\n  deleteMovie(movieId) {\n    return this.httpClient.delete(this.url + '/movies/delete/' + movieId).pipe(catchError(this.handleError));\n  }\n  addMovie(mvee) {\n    return this.httpClient.post(this.url + '/movies/add', JSON.stringify(mvee), this.httpOptions).pipe(catchError(this.handleError));\n  }\n  updateMovie(mvee) {\n    console.log(mvee);\n    return this.httpClient.put(this.url + '/movies/update', JSON.stringify(mvee), this.httpOptions).pipe(catchError(this.handleError));\n  }\n  addMovieToShow(mvee, showId) {\n    console.log(mvee);\n    return this.httpClient.put(this.url + '/movies/map?showId=' + showId, JSON.stringify(mvee), this.httpOptions).pipe(catchError(this.handleError));\n  }\n  getMovieById(id) {\n    return this.httpClient.get(this.url + '/movies/viewMovie/' + id).pipe(catchError(this.handleError));\n  }\n  handleError(eResponse) {\n    if (eResponse.error instanceof ErrorEvent) {\n      console.log('Client Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    } else {\n      console.log('Server Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    }\n    return throwError(eResponse.error.message);\n  }\n}\nMveeService.ɵfac = function MveeService_Factory(t) {\n  return new (t || MveeService)(i0.ɵɵinject(i1.HttpClient));\n};\nMveeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MveeService,\n  factory: MveeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","throwError","catchError","MveeService","constructor","httpClient","url","httpOptions","headers","getAllMovies","get","pipe","handleError","deleteMovie","movieId","delete","addMovie","mvee","post","JSON","stringify","updateMovie","console","log","put","addMovieToShow","showId","getMovieById","id","eResponse","error","ErrorEvent","message","status","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/coder/project/workspace/MovieTicketBookingApplication-FrontEnd/src/app/movie/mvee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Observable, pipe, throwError } from 'rxjs';\nimport { Movie } from './movie';\nimport { catchError } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root',\n})\nexport class MveeService {\n  private url = 'https://8080-fcbeaafebaafceeddbcdaddcefcddcaaceb.project.examly.io';\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  };\n\n  constructor(private httpClient: HttpClient) {}\n\n  getAllMovies(): Observable<Movie[]> {\n    return this.httpClient\n      .get<Movie[]>(this.url + '/movies' + '/findall')\n      .pipe(catchError(this.handleError));\n  }\n\n  deleteMovie(movieId: number): Observable<Movie> {\n    return this.httpClient\n      .delete<Movie>(this.url + '/movies/delete/' + movieId)\n      .pipe(catchError(this.handleError));\n  }\n\n  addMovie(mvee: any): Observable<any> {\n    return this.httpClient\n      .post<Movie>(\n        this.url + '/movies/add',\n        JSON.stringify(mvee),\n        this.httpOptions\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  updateMovie(mvee: any): Observable<any> {\n    console.log(mvee);\n    return this.httpClient\n      .put<Movie>(\n        this.url + '/movies/update',\n        JSON.stringify(mvee),\n        this.httpOptions\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  addMovieToShow(mvee: any, showId: number): Observable<any> {\n    console.log(mvee);\n    return this.httpClient\n      .put<Movie>(\n        this.url + '/movies/map?showId=' + showId,\n        JSON.stringify(mvee),\n        this.httpOptions\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  getMovieById(id: any): Observable<Movie> {\n    return this.httpClient\n      .get<Movie>(this.url + '/movies/viewMovie/' + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  handleError(eResponse: HttpErrorResponse) {\n    if (eResponse.error instanceof ErrorEvent) {\n      console.log('Client Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    } else {\n      console.log('Server Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    }\n    return throwError(eResponse.error.message);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}