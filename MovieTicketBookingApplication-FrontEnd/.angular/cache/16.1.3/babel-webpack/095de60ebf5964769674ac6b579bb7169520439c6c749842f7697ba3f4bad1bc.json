{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SeetService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://localhost:8000';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getAllSeats() {\n    return this.httpClient.get(this.url + '/seats' + '/findall').pipe(catchError(this.handleError));\n  }\n  addSeat(seat) {\n    return this.httpClient.post(this.url + '/seats/add', JSON.stringify(seat), this.httpOptions).pipe(catchError(this.handleError));\n  }\n  updateSeat(seat) {\n    console.log(seat);\n    return this.httpClient.put(this.url + '/seats/update', JSON.stringify(seat), this.httpOptions).pipe(catchError(this.handleError));\n  }\n  handleError(eResponse) {\n    if (eResponse.error instanceof ErrorEvent) {\n      console.log('Client Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    } else {\n      console.log('Server Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    }\n    return throwError(eResponse.error.message);\n  }\n}\nSeetService.ɵfac = function SeetService_Factory(t) {\n  return new (t || SeetService)(i0.ɵɵinject(i1.HttpClient));\n};\nSeetService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SeetService,\n  factory: SeetService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","throwError","catchError","SeetService","constructor","httpClient","url","httpOptions","headers","getAllSeats","get","pipe","handleError","addSeat","seat","post","JSON","stringify","updateSeat","console","log","put","eResponse","error","ErrorEvent","message","status","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/coder/project/workspace/MovieTicketBookingApplication-FrontEnd/src/app/seat/seet.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Observable, pipe, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Seat } from './seat';\n@Injectable({\n  providedIn: 'root',\n})\nexport class SeetService {\n  private url = 'http://localhost:8000';\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  };\n\n  constructor(private httpClient: HttpClient) {}\n\n  getAllSeats(): Observable<Seat[]> {\n    return this.httpClient\n      .get<Seat[]>(this.url + '/seats' + '/findall')\n      .pipe(catchError(this.handleError));\n  }\n\n  addSeat(seat: any): Observable<any> {\n    return this.httpClient\n      .post<Seat>(\n        this.url + '/seats/add',\n        JSON.stringify(seat),\n        this.httpOptions\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  updateSeat(seat: any): Observable<any> {\n    console.log(seat);\n    return this.httpClient\n      .put<Seat>(\n        this.url + '/seats/update',\n        JSON.stringify(seat),\n        this.httpOptions\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  handleError(eResponse: HttpErrorResponse) {\n    if (eResponse.error instanceof ErrorEvent) {\n      console.log('Client Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    } else {\n      console.log('Server Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    }\n    return throwError(eResponse.error.message);\n  }\n}\n"],"mappings":"AACA,SAGEA,WAAW,QACN,sBAAsB;AAC7B,SAA2BC,UAAU,QAAQ,MAAM;AACnD,SAASC,UAAU,QAAQ,gBAAgB;;;AAK3C,OAAM,MAAOC,WAAW;EAQtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAPtB,KAAAC,GAAG,GAAG,uBAAuB;IACrC,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIR,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;EAE4C;EAE7CS,WAAWA,CAAA;IACT,OAAO,IAAI,CAACJ,UAAU,CACnBK,GAAG,CAAS,IAAI,CAACJ,GAAG,GAAG,QAAQ,GAAG,UAAU,CAAC,CAC7CK,IAAI,CAACT,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAAC;EACvC;EAEAC,OAAOA,CAACC,IAAS;IACf,OAAO,IAAI,CAACT,UAAU,CACnBU,IAAI,CACH,IAAI,CAACT,GAAG,GAAG,YAAY,EACvBU,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,EACpB,IAAI,CAACP,WAAW,CACjB,CACAI,IAAI,CAACT,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAAC;EACvC;EAEAM,UAAUA,CAACJ,IAAS;IAClBK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;IACjB,OAAO,IAAI,CAACT,UAAU,CACnBgB,GAAG,CACF,IAAI,CAACf,GAAG,GAAG,eAAe,EAC1BU,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,EACpB,IAAI,CAACP,WAAW,CACjB,CACAI,IAAI,CAACT,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAAC;EACvC;EAEAA,WAAWA,CAACU,SAA4B;IACtC,IAAIA,SAAS,CAACC,KAAK,YAAYC,UAAU,EAAE;MACzCL,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGE,SAAS,CAACC,KAAK,CAACE,OAAO,CAAC;MAC5DN,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGE,SAAS,CAACI,MAAM,CAAC;KAC/C,MAAM;MACLP,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGE,SAAS,CAACC,KAAK,CAACE,OAAO,CAAC;MAC5DN,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGE,SAAS,CAACI,MAAM,CAAC;;IAEhD,OAAOzB,UAAU,CAACqB,SAAS,CAACC,KAAK,CAACE,OAAO,CAAC;EAC5C;;AA9CWtB,WAAW,C;mBAAXA,WAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAX3B,WAAW,C;SAAXA,WAAW;EAAA4B,OAAA,EAAX5B,WAAW,CAAA6B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}