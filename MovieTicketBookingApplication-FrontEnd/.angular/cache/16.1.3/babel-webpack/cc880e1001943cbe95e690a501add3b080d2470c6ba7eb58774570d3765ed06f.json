{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { pipe, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CustmerService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'https://8080-fcbeaafebaafceeddbcdaddcefcddcaaceb.project.examly.io';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getAllCustomer() {\n    return this.httpClient.get(this.url + '/customer' + '/findall');\n    pipe(catchError(this.handleError));\n  }\n  deleteCustomer(customerId) {\n    return this.httpClient.delete(this.url + '/customer/delete/' + customerId).pipe(catchError(this.handleError));\n  }\n  addCustomer(cust) {\n    return this.httpClient.post(this.url + '/customer/add', JSON.stringify(cust), this.httpOptions).pipe(catchError(this.handleError));\n  }\n  updateCustomer(cust) {\n    console.log(cust);\n    return this.httpClient.put(this.url + '/customer/update', JSON.stringify(cust), this.httpOptions).pipe(catchError(this.handleError));\n  }\n  getCustomerById(id) {\n    return this.httpClient.get(this.url + '/customer/view/' + id).pipe(catchError(this.handleError));\n  }\n  handleError(eResponse) {\n    if (eResponse.error instanceof ErrorEvent) {\n      console.log('Client Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    } else {\n      console.log('Server Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    }\n    return throwError(eResponse.error.message);\n  }\n}\nCustmerService.ɵfac = function CustmerService_Factory(t) {\n  return new (t || CustmerService)(i0.ɵɵinject(i1.HttpClient));\n};\nCustmerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustmerService,\n  factory: CustmerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","pipe","throwError","catchError","CustmerService","constructor","httpClient","url","httpOptions","headers","getAllCustomer","get","handleError","deleteCustomer","customerId","delete","addCustomer","cust","post","JSON","stringify","updateCustomer","console","log","put","getCustomerById","id","eResponse","error","ErrorEvent","message","status","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/coder/project/workspace/MovieTicketBookingApplication-FrontEnd/src/app/customer/custmer.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Observable, pipe, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Customer } from './customer';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustmerService {\n  private url = 'https://8080-fcbeaafebaafceeddbcdaddcefcddcaaceb.project.examly.io';\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  };\n\n  constructor(private httpClient: HttpClient) {}\n\n  getAllCustomer(): Observable<Customer[]> {\n    return this.httpClient.get<Customer[]>(this.url + '/customer' + '/findall');\n    pipe(catchError(this.handleError));\n  }\n\n  deleteCustomer(customerId: number): Observable<Customer> {\n    return this.httpClient\n      .delete<Customer>(this.url + '/customer/delete/' + customerId)\n      .pipe(catchError(this.handleError));\n  }\n\n  addCustomer(cust: any): Observable<any> {\n    return this.httpClient\n      .post<Customer>(\n        this.url + '/customer/add',\n        JSON.stringify(cust),\n        this.httpOptions\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  updateCustomer(cust: any): Observable<any> {\n    console.log(cust);\n    return this.httpClient\n      .put<Customer>(\n        this.url + '/customer/update',\n        JSON.stringify(cust),\n        this.httpOptions\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  getCustomerById(id: any): Observable<Customer> {\n    return this.httpClient\n      .get<Customer>(this.url + '/customer/view/' + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  handleError(eResponse: HttpErrorResponse) {\n    if (eResponse.error instanceof ErrorEvent) {\n      console.log('Client Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    } else {\n      console.log('Server Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    }\n    return throwError(eResponse.error.message);\n  }\n}\n"],"mappings":"AACA,SAGEA,WAAW,QACN,sBAAsB;AAC7B,SAAqBC,IAAI,EAAEC,UAAU,QAAQ,MAAM;AACnD,SAASC,UAAU,QAAQ,gBAAgB;;;AAM3C,OAAM,MAAOC,cAAc;EAQzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAPtB,KAAAC,GAAG,GAAG,oEAAoE;IAClF,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIT,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;EAE4C;EAE7CU,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAa,IAAI,CAACJ,GAAG,GAAG,WAAW,GAAG,UAAU,CAAC;IAC3EN,IAAI,CAACE,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAAC;EACpC;EAEAC,cAAcA,CAACC,UAAkB;IAC/B,OAAO,IAAI,CAACR,UAAU,CACnBS,MAAM,CAAW,IAAI,CAACR,GAAG,GAAG,mBAAmB,GAAGO,UAAU,CAAC,CAC7Db,IAAI,CAACE,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAAC;EACvC;EAEAI,WAAWA,CAACC,IAAS;IACnB,OAAO,IAAI,CAACX,UAAU,CACnBY,IAAI,CACH,IAAI,CAACX,GAAG,GAAG,eAAe,EAC1BY,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,EACpB,IAAI,CAACT,WAAW,CACjB,CACAP,IAAI,CAACE,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAAC;EACvC;EAEAS,cAAcA,CAACJ,IAAS;IACtBK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;IACjB,OAAO,IAAI,CAACX,UAAU,CACnBkB,GAAG,CACF,IAAI,CAACjB,GAAG,GAAG,kBAAkB,EAC7BY,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,EACpB,IAAI,CAACT,WAAW,CACjB,CACAP,IAAI,CAACE,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAAC;EACvC;EAEAa,eAAeA,CAACC,EAAO;IACrB,OAAO,IAAI,CAACpB,UAAU,CACnBK,GAAG,CAAW,IAAI,CAACJ,GAAG,GAAG,iBAAiB,GAAGmB,EAAE,CAAC,CAChDzB,IAAI,CAACE,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAAC;EACvC;EAEAA,WAAWA,CAACe,SAA4B;IACtC,IAAIA,SAAS,CAACC,KAAK,YAAYC,UAAU,EAAE;MACzCP,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGI,SAAS,CAACC,KAAK,CAACE,OAAO,CAAC;MAC5DR,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGI,SAAS,CAACI,MAAM,CAAC;KAC/C,MAAM;MACLT,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGI,SAAS,CAACC,KAAK,CAACE,OAAO,CAAC;MAC5DR,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGI,SAAS,CAACI,MAAM,CAAC;;IAEhD,OAAO7B,UAAU,CAACyB,SAAS,CAACC,KAAK,CAACE,OAAO,CAAC;EAC5C;;AAzDW1B,cAAc,C;mBAAdA,cAAc,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAd/B,cAAc,C;SAAdA,cAAc;EAAAgC,OAAA,EAAdhC,cAAc,CAAAiC,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}