{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { pipe, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ThetreService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://localhost:8080';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getAllTheatres() {\n    return this.httpClient.get(this.url + '/theatre' + '/all');\n    pipe(catchError(this.handleError));\n  }\n  deleteTheatre(TheatreId) {\n    return this.httpClient.delete(this.url + '/theatre/delete/' + TheatreId).pipe(catchError(this.handleError));\n  }\n  addTheatre(theatre) {\n    return this.httpClient.post(this.url + '/theatre/insert', JSON.stringify(theatre), this.httpOptions).pipe(catchError(this.handleError));\n  }\n  updateTheatre(theatre) {\n    console.log(theatre);\n    return this.httpClient.put(this.url + '/theatre/update', JSON.stringify(theatre), this.httpOptions).pipe(catchError(this.handleError));\n  }\n  findTheatre(id) {\n    return this.httpClient.get(this.url + '/theatre/find/' + id).pipe(catchError(this.handleError));\n  }\n  findTheatresbyMovie(movieId) {\n    return this.httpClient.get(this.url + '/theatre/findbyMovie/' + movieId).pipe(catchError(this.handleError));\n  }\n  handleError(eResponse) {\n    if (eResponse.error instanceof ErrorEvent) {\n      console.log('Client Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    } else {\n      console.log('Server Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    }\n    return throwError(eResponse.error.message);\n  }\n}\nThetreService.ɵfac = function ThetreService_Factory(t) {\n  return new (t || ThetreService)(i0.ɵɵinject(i1.HttpClient));\n};\nThetreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ThetreService,\n  factory: ThetreService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","pipe","throwError","catchError","ThetreService","constructor","httpClient","url","httpOptions","headers","getAllTheatres","get","handleError","deleteTheatre","TheatreId","delete","addTheatre","theatre","post","JSON","stringify","updateTheatre","console","log","put","findTheatre","id","findTheatresbyMovie","movieId","eResponse","error","ErrorEvent","message","status","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/coder/project/workspace/MovieTicketBookingApplication-FrontEnd/src/app/theatre/thetre.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Observable, pipe, throwError } from 'rxjs';\nimport { Theatre } from './theatre';\nimport { catchError } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThetreService {\n  private url = 'http://localhost:8080';\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  };\n  constructor(private httpClient: HttpClient) {}\n\n  getAllTheatres(): Observable<Theatre[]> {\n    return this.httpClient.get<Theatre[]>(this.url + '/theatre' + '/all');\n    pipe(catchError(this.handleError));\n  }\n\n  deleteTheatre(TheatreId: number): Observable<Theatre> {\n    return this.httpClient\n      .delete<Theatre>(this.url + '/theatre/delete/' + TheatreId)\n      .pipe(catchError(this.handleError));\n  }\n\n  addTheatre(theatre: any): Observable<any> {\n    return this.httpClient\n      .post<Theatre>(\n        this.url + '/theatre/insert',\n        JSON.stringify(theatre),\n        this.httpOptions\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  updateTheatre(theatre: any): Observable<any> {\n    console.log(theatre);\n    return this.httpClient\n      .put<Theatre>(\n        this.url + '/theatre/update',\n        JSON.stringify(theatre),\n        this.httpOptions\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  findTheatre(id: any): Observable<Theatre> {\n    return this.httpClient\n      .get<Theatre>(this.url + '/theatre/find/' + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  findTheatresbyMovie(movieId: any): Observable<Theatre[]> {\n    return this.httpClient\n      .get<Theatre[]>(this.url + '/theatre/findbyMovie/' + movieId)\n      .pipe(catchError(this.handleError));\n  }\n\n  handleError(eResponse: HttpErrorResponse) {\n    if (eResponse.error instanceof ErrorEvent) {\n      console.log('Client Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    } else {\n      console.log('Server Side Error =' + eResponse.error.message);\n      console.log('Status Code=' + eResponse.status);\n    }\n    return throwError(eResponse.error.message);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}